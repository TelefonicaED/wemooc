/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ted.audit.db.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.Validator;

import com.ted.audit.db.model.AuditEntry;
import com.ted.audit.db.model.AuditEntryModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AuditEntry service. Represents a row in the &quot;aud_AuditEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AuditEntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AuditEntryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AuditEntryImpl
 * @see AuditEntry
 * @see AuditEntryModel
 * @generated
 */
@ProviderType
public class AuditEntryModelImpl extends BaseModelImpl<AuditEntry>
	implements AuditEntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a audit entry model instance should use the {@link AuditEntry} interface instead.
	 */
	public static final String TABLE_NAME = "aud_AuditEntry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "auditId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "classNameId", Types.BIGINT },
			{ "classPK", Types.BIGINT },
			{ "associationClassPK", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "actionId", Types.INTEGER },
			{ "extradata", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("auditId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("classNameId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("classPK", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("associationClassPK", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("startDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("endDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("actionId", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("extradata", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table aud_AuditEntry (auditId LONG not null primary key,companyId LONG,groupId LONG,classNameId LONG,classPK LONG,associationClassPK LONG,userId LONG,userName VARCHAR(75) null,startDate DATE null,endDate DATE null,actionId INTEGER,extradata VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table aud_AuditEntry";
	public static final String ORDER_BY_JPQL = " ORDER BY auditEntry.startDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY aud_AuditEntry.startDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.ted.audit.db.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ted.audit.db.model.AuditEntry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.ted.audit.db.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ted.audit.db.model.AuditEntry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.ted.audit.db.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ted.audit.db.model.AuditEntry"),
			true);
	public static final long ACTIONID_COLUMN_BITMASK = 1L;
	public static final long CLASSNAMEID_COLUMN_BITMASK = 2L;
	public static final long COMPANYID_COLUMN_BITMASK = 4L;
	public static final long GROUPID_COLUMN_BITMASK = 8L;
	public static final long USERID_COLUMN_BITMASK = 16L;
	public static final long STARTDATE_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.ted.audit.db.service.util.ServiceProps.get(
				"lock.expiration.time.com.ted.audit.db.model.AuditEntry"));

	public AuditEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _auditId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAuditId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _auditId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AuditEntry.class;
	}

	@Override
	public String getModelClassName() {
		return AuditEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("auditId", getAuditId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("classNameId", getClassNameId());
		attributes.put("classPK", getClassPK());
		attributes.put("associationClassPK", getAssociationClassPK());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());
		attributes.put("actionId", getActionId());
		attributes.put("extradata", getExtradata());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long auditId = (Long)attributes.get("auditId");

		if (auditId != null) {
			setAuditId(auditId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long classNameId = (Long)attributes.get("classNameId");

		if (classNameId != null) {
			setClassNameId(classNameId);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		Long associationClassPK = (Long)attributes.get("associationClassPK");

		if (associationClassPK != null) {
			setAssociationClassPK(associationClassPK);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Integer actionId = (Integer)attributes.get("actionId");

		if (actionId != null) {
			setActionId(actionId);
		}

		String extradata = (String)attributes.get("extradata");

		if (extradata != null) {
			setExtradata(extradata);
		}
	}

	@Override
	public long getAuditId() {
		return _auditId;
	}

	@Override
	public void setAuditId(long auditId) {
		_auditId = auditId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public String getClassName() {
		if (getClassNameId() <= 0) {
			return "";
		}

		return PortalUtil.getClassName(getClassNameId());
	}

	@Override
	public void setClassName(String className) {
		long classNameId = 0;

		if (Validator.isNotNull(className)) {
			classNameId = PortalUtil.getClassNameId(className);
		}

		setClassNameId(classNameId);
	}

	@Override
	public long getClassNameId() {
		return _classNameId;
	}

	@Override
	public void setClassNameId(long classNameId) {
		_columnBitmask |= CLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalClassNameId) {
			_setOriginalClassNameId = true;

			_originalClassNameId = _classNameId;
		}

		_classNameId = classNameId;
	}

	public long getOriginalClassNameId() {
		return _originalClassNameId;
	}

	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_classPK = classPK;
	}

	@Override
	public long getAssociationClassPK() {
		return _associationClassPK;
	}

	@Override
	public void setAssociationClassPK(long associationClassPK) {
		_associationClassPK = associationClassPK;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_columnBitmask = -1L;

		_startDate = startDate;
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public int getActionId() {
		return _actionId;
	}

	@Override
	public void setActionId(int actionId) {
		_columnBitmask |= ACTIONID_COLUMN_BITMASK;

		if (!_setOriginalActionId) {
			_setOriginalActionId = true;

			_originalActionId = _actionId;
		}

		_actionId = actionId;
	}

	public int getOriginalActionId() {
		return _originalActionId;
	}

	@Override
	public String getExtradata() {
		if (_extradata == null) {
			return "";
		}
		else {
			return _extradata;
		}
	}

	@Override
	public void setExtradata(String extradata) {
		_extradata = extradata;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			AuditEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AuditEntry toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AuditEntry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AuditEntryImpl auditEntryImpl = new AuditEntryImpl();

		auditEntryImpl.setAuditId(getAuditId());
		auditEntryImpl.setCompanyId(getCompanyId());
		auditEntryImpl.setGroupId(getGroupId());
		auditEntryImpl.setClassNameId(getClassNameId());
		auditEntryImpl.setClassPK(getClassPK());
		auditEntryImpl.setAssociationClassPK(getAssociationClassPK());
		auditEntryImpl.setUserId(getUserId());
		auditEntryImpl.setUserName(getUserName());
		auditEntryImpl.setStartDate(getStartDate());
		auditEntryImpl.setEndDate(getEndDate());
		auditEntryImpl.setActionId(getActionId());
		auditEntryImpl.setExtradata(getExtradata());

		auditEntryImpl.resetOriginalValues();

		return auditEntryImpl;
	}

	@Override
	public int compareTo(AuditEntry auditEntry) {
		int value = 0;

		value = DateUtil.compareTo(getStartDate(), auditEntry.getStartDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AuditEntry)) {
			return false;
		}

		AuditEntry auditEntry = (AuditEntry)obj;

		long primaryKey = auditEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		AuditEntryModelImpl auditEntryModelImpl = this;

		auditEntryModelImpl._originalCompanyId = auditEntryModelImpl._companyId;

		auditEntryModelImpl._setOriginalCompanyId = false;

		auditEntryModelImpl._originalGroupId = auditEntryModelImpl._groupId;

		auditEntryModelImpl._setOriginalGroupId = false;

		auditEntryModelImpl._originalClassNameId = auditEntryModelImpl._classNameId;

		auditEntryModelImpl._setOriginalClassNameId = false;

		auditEntryModelImpl._originalUserId = auditEntryModelImpl._userId;

		auditEntryModelImpl._setOriginalUserId = false;

		auditEntryModelImpl._originalActionId = auditEntryModelImpl._actionId;

		auditEntryModelImpl._setOriginalActionId = false;

		auditEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AuditEntry> toCacheModel() {
		AuditEntryCacheModel auditEntryCacheModel = new AuditEntryCacheModel();

		auditEntryCacheModel.auditId = getAuditId();

		auditEntryCacheModel.companyId = getCompanyId();

		auditEntryCacheModel.groupId = getGroupId();

		auditEntryCacheModel.classNameId = getClassNameId();

		auditEntryCacheModel.classPK = getClassPK();

		auditEntryCacheModel.associationClassPK = getAssociationClassPK();

		auditEntryCacheModel.userId = getUserId();

		auditEntryCacheModel.userName = getUserName();

		String userName = auditEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			auditEntryCacheModel.userName = null;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			auditEntryCacheModel.startDate = startDate.getTime();
		}
		else {
			auditEntryCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			auditEntryCacheModel.endDate = endDate.getTime();
		}
		else {
			auditEntryCacheModel.endDate = Long.MIN_VALUE;
		}

		auditEntryCacheModel.actionId = getActionId();

		auditEntryCacheModel.extradata = getExtradata();

		String extradata = auditEntryCacheModel.extradata;

		if ((extradata != null) && (extradata.length() == 0)) {
			auditEntryCacheModel.extradata = null;
		}

		return auditEntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{auditId=");
		sb.append(getAuditId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", classNameId=");
		sb.append(getClassNameId());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", associationClassPK=");
		sb.append(getAssociationClassPK());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", actionId=");
		sb.append(getActionId());
		sb.append(", extradata=");
		sb.append(getExtradata());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.ted.audit.db.model.AuditEntry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>auditId</column-name><column-value><![CDATA[");
		sb.append(getAuditId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classNameId</column-name><column-value><![CDATA[");
		sb.append(getClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>associationClassPK</column-name><column-value><![CDATA[");
		sb.append(getAssociationClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionId</column-name><column-value><![CDATA[");
		sb.append(getActionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extradata</column-name><column-value><![CDATA[");
		sb.append(getExtradata());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = AuditEntry.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			AuditEntry.class, ModelWrapper.class
		};
	private long _auditId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _classNameId;
	private long _originalClassNameId;
	private boolean _setOriginalClassNameId;
	private long _classPK;
	private long _associationClassPK;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _startDate;
	private Date _endDate;
	private int _actionId;
	private int _originalActionId;
	private boolean _setOriginalActionId;
	private String _extradata;
	private long _columnBitmask;
	private AuditEntry _escapedModel;
}