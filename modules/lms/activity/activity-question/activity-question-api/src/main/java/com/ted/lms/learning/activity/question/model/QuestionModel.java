/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ted.lms.learning.activity.question.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedGroupedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Question service. Represents a row in the &quot;QU_Question&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.ted.lms.learning.activity.question.model.impl.QuestionModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.ted.lms.learning.activity.question.model.impl.QuestionImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Question
 * @generated
 */
@ProviderType
public interface QuestionModel
	extends BaseModel<Question>, ShardedModel, StagedGroupedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a question model instance should use the {@link Question} interface instead.
	 */

	/**
	 * Returns the primary key of this question.
	 *
	 * @return the primary key of this question
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this question.
	 *
	 * @param primaryKey the primary key of this question
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this question.
	 *
	 * @return the uuid of this question
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this question.
	 *
	 * @param uuid the uuid of this question
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the question ID of this question.
	 *
	 * @return the question ID of this question
	 */
	public long getQuestionId();

	/**
	 * Sets the question ID of this question.
	 *
	 * @param questionId the question ID of this question
	 */
	public void setQuestionId(long questionId);

	/**
	 * Returns the group ID of this question.
	 *
	 * @return the group ID of this question
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this question.
	 *
	 * @param groupId the group ID of this question
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this question.
	 *
	 * @return the company ID of this question
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this question.
	 *
	 * @param companyId the company ID of this question
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this question.
	 *
	 * @return the user ID of this question
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this question.
	 *
	 * @param userId the user ID of this question
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this question.
	 *
	 * @return the user uuid of this question
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this question.
	 *
	 * @param userUuid the user uuid of this question
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this question.
	 *
	 * @return the user name of this question
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this question.
	 *
	 * @param userName the user name of this question
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this question.
	 *
	 * @return the create date of this question
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this question.
	 *
	 * @param createDate the create date of this question
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this question.
	 *
	 * @return the modified date of this question
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this question.
	 *
	 * @param modifiedDate the modified date of this question
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the last publish date of this question.
	 *
	 * @return the last publish date of this question
	 */
	@Override
	public Date getLastPublishDate();

	/**
	 * Sets the last publish date of this question.
	 *
	 * @param lastPublishDate the last publish date of this question
	 */
	@Override
	public void setLastPublishDate(Date lastPublishDate);

	/**
	 * Returns the act ID of this question.
	 *
	 * @return the act ID of this question
	 */
	public long getActId();

	/**
	 * Sets the act ID of this question.
	 *
	 * @param actId the act ID of this question
	 */
	public void setActId(long actId);

	/**
	 * Returns the text of this question.
	 *
	 * @return the text of this question
	 */
	@AutoEscape
	public String getText();

	/**
	 * Sets the text of this question.
	 *
	 * @param text the text of this question
	 */
	public void setText(String text);

	/**
	 * Returns the question type ID of this question.
	 *
	 * @return the question type ID of this question
	 */
	public long getQuestionTypeId();

	/**
	 * Sets the question type ID of this question.
	 *
	 * @param questionTypeId the question type ID of this question
	 */
	public void setQuestionTypeId(long questionTypeId);

	/**
	 * Returns the active of this question.
	 *
	 * @return the active of this question
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this question is active.
	 *
	 * @return <code>true</code> if this question is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this question is active.
	 *
	 * @param active the active of this question
	 */
	public void setActive(boolean active);

	/**
	 * Returns the weight of this question.
	 *
	 * @return the weight of this question
	 */
	public long getWeight();

	/**
	 * Sets the weight of this question.
	 *
	 * @param weight the weight of this question
	 */
	public void setWeight(long weight);

	/**
	 * Returns the penalize of this question.
	 *
	 * @return the penalize of this question
	 */
	public boolean getPenalize();

	/**
	 * Returns <code>true</code> if this question is penalize.
	 *
	 * @return <code>true</code> if this question is penalize; <code>false</code> otherwise
	 */
	public boolean isPenalize();

	/**
	 * Sets whether this question is penalize.
	 *
	 * @param penalize the penalize of this question
	 */
	public void setPenalize(boolean penalize);

	/**
	 * Returns the extra content of this question.
	 *
	 * @return the extra content of this question
	 */
	@AutoEscape
	public String getExtraContent();

	/**
	 * Sets the extra content of this question.
	 *
	 * @param extraContent the extra content of this question
	 */
	public void setExtraContent(String extraContent);

}