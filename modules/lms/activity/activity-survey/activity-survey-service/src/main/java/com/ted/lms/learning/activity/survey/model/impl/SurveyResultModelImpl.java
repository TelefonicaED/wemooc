/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ted.lms.learning.activity.survey.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import com.ted.lms.learning.activity.survey.model.SurveyResult;
import com.ted.lms.learning.activity.survey.model.SurveyResultModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SurveyResult service. Represents a row in the &quot;Survey_SurveyResult&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SurveyResultModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SurveyResultImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SurveyResultImpl
 * @see SurveyResult
 * @see SurveyResultModel
 * @generated
 */
@ProviderType
public class SurveyResultModelImpl extends BaseModelImpl<SurveyResult>
	implements SurveyResultModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a survey result model instance should use the {@link SurveyResult} interface instead.
	 */
	public static final String TABLE_NAME = "Survey_SurveyResult";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "surveyResultId", Types.BIGINT },
			{ "actId", Types.BIGINT },
			{ "latId", Types.BIGINT },
			{ "questionId", Types.BIGINT },
			{ "answerId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "freeAnswer", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("surveyResultId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("actId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("latId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("questionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("answerId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("freeAnswer", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table Survey_SurveyResult (uuid_ VARCHAR(75) null,surveyResultId LONG not null primary key,actId LONG,latId LONG,questionId LONG,answerId LONG,userId LONG,freeAnswer TEXT null)";
	public static final String TABLE_SQL_DROP = "drop table Survey_SurveyResult";
	public static final String ORDER_BY_JPQL = " ORDER BY surveyResult.surveyResultId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Survey_SurveyResult.surveyResultId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.ted.survey.com.ted.lms.learning.activity.survey.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ted.lms.learning.activity.survey.model.SurveyResult"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.ted.survey.com.ted.lms.learning.activity.survey.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ted.lms.learning.activity.survey.model.SurveyResult"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.ted.survey.com.ted.lms.learning.activity.survey.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ted.lms.learning.activity.survey.model.SurveyResult"),
			true);
	public static final long ACTID_COLUMN_BITMASK = 1L;
	public static final long ANSWERID_COLUMN_BITMASK = 2L;
	public static final long QUESTIONID_COLUMN_BITMASK = 4L;
	public static final long USERID_COLUMN_BITMASK = 8L;
	public static final long UUID_COLUMN_BITMASK = 16L;
	public static final long SURVEYRESULTID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.ted.survey.com.ted.lms.learning.activity.survey.service.util.ServiceProps.get(
				"lock.expiration.time.com.ted.lms.learning.activity.survey.model.SurveyResult"));

	public SurveyResultModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _surveyResultId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSurveyResultId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _surveyResultId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SurveyResult.class;
	}

	@Override
	public String getModelClassName() {
		return SurveyResult.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("surveyResultId", getSurveyResultId());
		attributes.put("actId", getActId());
		attributes.put("latId", getLatId());
		attributes.put("questionId", getQuestionId());
		attributes.put("answerId", getAnswerId());
		attributes.put("userId", getUserId());
		attributes.put("freeAnswer", getFreeAnswer());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long surveyResultId = (Long)attributes.get("surveyResultId");

		if (surveyResultId != null) {
			setSurveyResultId(surveyResultId);
		}

		Long actId = (Long)attributes.get("actId");

		if (actId != null) {
			setActId(actId);
		}

		Long latId = (Long)attributes.get("latId");

		if (latId != null) {
			setLatId(latId);
		}

		Long questionId = (Long)attributes.get("questionId");

		if (questionId != null) {
			setQuestionId(questionId);
		}

		Long answerId = (Long)attributes.get("answerId");

		if (answerId != null) {
			setAnswerId(answerId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String freeAnswer = (String)attributes.get("freeAnswer");

		if (freeAnswer != null) {
			setFreeAnswer(freeAnswer);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSurveyResultId() {
		return _surveyResultId;
	}

	@Override
	public void setSurveyResultId(long surveyResultId) {
		_surveyResultId = surveyResultId;
	}

	@Override
	public long getActId() {
		return _actId;
	}

	@Override
	public void setActId(long actId) {
		_columnBitmask |= ACTID_COLUMN_BITMASK;

		if (!_setOriginalActId) {
			_setOriginalActId = true;

			_originalActId = _actId;
		}

		_actId = actId;
	}

	public long getOriginalActId() {
		return _originalActId;
	}

	@Override
	public long getLatId() {
		return _latId;
	}

	@Override
	public void setLatId(long latId) {
		_latId = latId;
	}

	@Override
	public long getQuestionId() {
		return _questionId;
	}

	@Override
	public void setQuestionId(long questionId) {
		_columnBitmask |= QUESTIONID_COLUMN_BITMASK;

		if (!_setOriginalQuestionId) {
			_setOriginalQuestionId = true;

			_originalQuestionId = _questionId;
		}

		_questionId = questionId;
	}

	public long getOriginalQuestionId() {
		return _originalQuestionId;
	}

	@Override
	public long getAnswerId() {
		return _answerId;
	}

	@Override
	public void setAnswerId(long answerId) {
		_columnBitmask |= ANSWERID_COLUMN_BITMASK;

		if (!_setOriginalAnswerId) {
			_setOriginalAnswerId = true;

			_originalAnswerId = _answerId;
		}

		_answerId = answerId;
	}

	public long getOriginalAnswerId() {
		return _originalAnswerId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getFreeAnswer() {
		if (_freeAnswer == null) {
			return "";
		}
		else {
			return _freeAnswer;
		}
	}

	@Override
	public void setFreeAnswer(String freeAnswer) {
		_freeAnswer = freeAnswer;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SurveyResult.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SurveyResult toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SurveyResult)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SurveyResultImpl surveyResultImpl = new SurveyResultImpl();

		surveyResultImpl.setUuid(getUuid());
		surveyResultImpl.setSurveyResultId(getSurveyResultId());
		surveyResultImpl.setActId(getActId());
		surveyResultImpl.setLatId(getLatId());
		surveyResultImpl.setQuestionId(getQuestionId());
		surveyResultImpl.setAnswerId(getAnswerId());
		surveyResultImpl.setUserId(getUserId());
		surveyResultImpl.setFreeAnswer(getFreeAnswer());

		surveyResultImpl.resetOriginalValues();

		return surveyResultImpl;
	}

	@Override
	public int compareTo(SurveyResult surveyResult) {
		long primaryKey = surveyResult.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SurveyResult)) {
			return false;
		}

		SurveyResult surveyResult = (SurveyResult)obj;

		long primaryKey = surveyResult.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		SurveyResultModelImpl surveyResultModelImpl = this;

		surveyResultModelImpl._originalUuid = surveyResultModelImpl._uuid;

		surveyResultModelImpl._originalActId = surveyResultModelImpl._actId;

		surveyResultModelImpl._setOriginalActId = false;

		surveyResultModelImpl._originalQuestionId = surveyResultModelImpl._questionId;

		surveyResultModelImpl._setOriginalQuestionId = false;

		surveyResultModelImpl._originalAnswerId = surveyResultModelImpl._answerId;

		surveyResultModelImpl._setOriginalAnswerId = false;

		surveyResultModelImpl._originalUserId = surveyResultModelImpl._userId;

		surveyResultModelImpl._setOriginalUserId = false;

		surveyResultModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SurveyResult> toCacheModel() {
		SurveyResultCacheModel surveyResultCacheModel = new SurveyResultCacheModel();

		surveyResultCacheModel.uuid = getUuid();

		String uuid = surveyResultCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			surveyResultCacheModel.uuid = null;
		}

		surveyResultCacheModel.surveyResultId = getSurveyResultId();

		surveyResultCacheModel.actId = getActId();

		surveyResultCacheModel.latId = getLatId();

		surveyResultCacheModel.questionId = getQuestionId();

		surveyResultCacheModel.answerId = getAnswerId();

		surveyResultCacheModel.userId = getUserId();

		surveyResultCacheModel.freeAnswer = getFreeAnswer();

		String freeAnswer = surveyResultCacheModel.freeAnswer;

		if ((freeAnswer != null) && (freeAnswer.length() == 0)) {
			surveyResultCacheModel.freeAnswer = null;
		}

		return surveyResultCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", surveyResultId=");
		sb.append(getSurveyResultId());
		sb.append(", actId=");
		sb.append(getActId());
		sb.append(", latId=");
		sb.append(getLatId());
		sb.append(", questionId=");
		sb.append(getQuestionId());
		sb.append(", answerId=");
		sb.append(getAnswerId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", freeAnswer=");
		sb.append(getFreeAnswer());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.ted.lms.learning.activity.survey.model.SurveyResult");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surveyResultId</column-name><column-value><![CDATA[");
		sb.append(getSurveyResultId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actId</column-name><column-value><![CDATA[");
		sb.append(getActId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>latId</column-name><column-value><![CDATA[");
		sb.append(getLatId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>questionId</column-name><column-value><![CDATA[");
		sb.append(getQuestionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>answerId</column-name><column-value><![CDATA[");
		sb.append(getAnswerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>freeAnswer</column-name><column-value><![CDATA[");
		sb.append(getFreeAnswer());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SurveyResult.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SurveyResult.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _surveyResultId;
	private long _actId;
	private long _originalActId;
	private boolean _setOriginalActId;
	private long _latId;
	private long _questionId;
	private long _originalQuestionId;
	private boolean _setOriginalQuestionId;
	private long _answerId;
	private long _originalAnswerId;
	private boolean _setOriginalAnswerId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _freeAnswer;
	private long _columnBitmask;
	private SurveyResult _escapedModel;
}